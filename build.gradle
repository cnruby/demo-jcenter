plugins{
    id 'com.jfrog.bintray' version '1.8.4'
    id 'java-library'
    id 'maven-publish'
    id 'maven'
}

group = 'de.iotoi'
description = 'java jcenter gradle'
version = project.findProperty("version")
sourceCompatibility = 11

// java 11 auto module name
// jar {
//     manifest {
//         attributes 'Automatic-Module-Name': "$project.group.$project.name"
//     }
// }

repositories{
    mavenCentral()
    jcenter()
}

dependencies{}


// create the files *-sources.jar
task sourcesJar(type: Jar, dependsOn: classes){
    classifier = 'sources'
    from sourceSets.main.allSource
}
// create the files *-javadoc.jar
task javadocJar(type: Jar, dependsOn: javadoc){
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts{
    archives sourcesJar
    archives javadocJar
}

bintray{
    user = System.getenv("bintrayUser")
    key = System.getenv("bintrayApiKey")
    publications = ['DemoJcenter']
    publish = true // !!!
    pkg{
        repo = 'gradle_java_jcenter'
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/cnruby/demo-jcenter'
        labels = ['java, demo, jcenter, library, gradle, bintray']
        // publicDownloadNumbers = true
        version {
            name = project.version
            released = new Date()

            // create the files *.asc in the jcenter
            gpg {
                sign = true
                passphrase = System.getenv('gpgPassphrase')
            }

            // mavenCentralSync {
            //     sync = false
            //     user = findProperty('sonatypeUser')
            //     password = findProperty('sonatypePassword')
            // }
        }
    }
}

publishing{
    publications{
        DemoJcenter(MavenPublication){
            from components.java
            groupId group
            artifactId archivesBaseName
            version version
            artifact javadocJar
            artifact sourcesJar
        }
    }
}



println              bintray.user
println              bintray.key
println              archivesBaseName
